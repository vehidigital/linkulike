// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(cuid())
  email               String   @unique
  password            String
  username            String   @unique @db.VarChar(50)
  displayName         String?
  bio                 String?
  avatarUrl           String?
  theme               String?  @default("default")
  backgroundColor     String?  @default("#000000")
  backgroundGradient  String?  @default("linear-gradient(135deg, #667eea 0%, #764ba2 100%)")
  buttonStyle         String?  @default("gradient")
  buttonColor         String?  @default("#ffffff")
  buttonGradient      String?  @default("linear-gradient(135deg, #667eea 0%, #764ba2 100%)")
  textColor           String?  @default("#ffffff")
  fontFamily          String?  @default("Inter")

  isPremium           Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  links Link[]
}

model Link {
  id          String   @id @default(cuid())
  title       String
  url         String
  userId      String
  position    Int      @default(0)
  icon        String?  @default("globe")
  isActive    Boolean  @default(true)
  customColor String?  // Custom color for this specific link
  useCustomColor Boolean @default(false) // Whether to use custom color or auto-detect
  textColorOverride String? // 'light', 'dark' oder undefined f√ºr Button-Textfarbe
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  clicks LinkClick[]
}

model LinkClick {
  id        String   @id @default(cuid())
  linkId    String
  ipAddress String?
  userAgent String?
  referer   String?
  clickedAt DateTime @default(now())

  link Link @relation(fields: [linkId], references: [id], onDelete: Cascade)
} 